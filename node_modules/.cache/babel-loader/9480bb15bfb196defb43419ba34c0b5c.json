{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as args from './implementation/args';\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { Location } from './implementation/location';\nimport * as fbsPromiseImpl from './implementation/promise_external';\nimport * as RequestExports from './implementation/request';\nimport { Reference } from './reference';\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\n\nvar Service =\n/** @class */\nfunction () {\n  function Service(app, pool, url) {\n    this.bucket_ = null;\n\n    function maker(authWrapper, loc) {\n      return new Reference(authWrapper, loc);\n    }\n\n    this.authWrapper_ = new AuthWrapper(app, maker, RequestExports.makeRequest, this, pool);\n    this.app_ = app;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      var authWrapperBucket = this.authWrapper_.bucket();\n\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n\n\n  Service.prototype.ref = function (path) {\n    function validator(path) {\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this.authWrapper_, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n\n\n  Service.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  };\n\n  Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this.authWrapper_.maxUploadRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Service.prototype.setMaxUploadRetryTime = function (time) {\n    args.validate('setMaxUploadRetryTime', [args.nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  };\n\n  Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this.authWrapper_.maxOperationRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Service.prototype.setMaxOperationRetryTime = function (time) {\n    args.validate('setMaxOperationRetryTime', [args.nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  };\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Service.prototype, \"INTERNAL\", {\n    get: function () {\n      return this.internals_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Service;\n}();\n\nexport { Service };\n/**\n * @struct\n */\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\n   * Called when the associated app is deleted.\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\n   */\n\n\n  ServiceInternals.prototype.delete = function () {\n    this.service_.authWrapper_.deleteApp();\n    return fbsPromiseImpl.resolve(undefined);\n  };\n\n  return ServiceInternals;\n}();\n\nexport { ServiceInternals };","map":{"version":3,"sources":["../src/service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app';\nimport * as args from './implementation/args';\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { Location } from './implementation/location';\nimport * as fbsPromiseImpl from './implementation/promise_external';\nimport * as RequestExports from './implementation/request';\nimport { Request } from './implementation/request';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference } from './reference';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\nexport class Service {\n  authWrapper_: AuthWrapper;\n  private app_: FirebaseApp;\n  private bucket_: Location | null = null;\n  private internals_: ServiceInternals;\n\n  constructor(app: FirebaseApp, pool: XhrIoPool, url?: string) {\n    function maker(authWrapper: AuthWrapper, loc: Location) {\n      return new Reference(authWrapper, loc);\n    }\n    this.authWrapper_ = new AuthWrapper(\n      app,\n      maker,\n      RequestExports.makeRequest,\n      this,\n      pool\n    );\n    this.app_ = app;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      const authWrapperBucket = this.authWrapper_.bucket();\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): Reference {\n    function validator(path: string) {\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    let ref = new Reference(this.authWrapper_, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): Reference {\n    function validator(p: string) {\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  }\n\n  get maxUploadRetryTime(): number {\n    return this.authWrapper_.maxUploadRetryTime();\n  }\n\n  setMaxUploadRetryTime(time: number) {\n    args.validate(\n      'setMaxUploadRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  }\n\n  get maxOperationRetryTime(): number {\n    return this.authWrapper_.maxOperationRetryTime();\n  }\n\n  setMaxOperationRetryTime(time: number) {\n    args.validate(\n      'setMaxOperationRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  }\n\n  get app(): FirebaseApp {\n    return this.app_;\n  }\n\n  get INTERNAL(): ServiceInternals {\n    return this.internals_;\n  }\n}\n\n/**\n * @struct\n */\nexport class ServiceInternals {\n  service_: Service;\n\n  constructor(service: Service) {\n    this.service_ = service;\n  }\n\n  /**\n   * Called when the associated app is deleted.\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\n   */\n  delete(): Promise<void> {\n    this.service_.authWrapper_.deleteApp();\n    return fbsPromiseImpl.resolve<void>(undefined);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}