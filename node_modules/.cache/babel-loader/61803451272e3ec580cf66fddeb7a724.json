{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nexport var InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nexport var TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\nexport function taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}","map":{"version":3,"sources":["../src/implementation/taskenums.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAWH,OAAO,IAAM,SAAS,GAAG;AACvB;AACA,EAAA,aAAa,EAAE;AAFQ,CAAlB;AAUP,OAAO,IAAM,iBAAiB,GAAG;AAC/B,EAAA,OAAO,EAAE,SADsB;AAE/B,EAAA,OAAO,EAAE,SAFsB;AAG/B,EAAA,MAAM,EAAE,QAHuB;AAI/B,EAAA,OAAO,EAAE,SAJsB;AAK/B,EAAA,SAAS,EAAE,WALoB;AAM/B,EAAA,QAAQ,EAAE,UANqB;AAO/B,EAAA,KAAK,EAAE;AAPwB,CAA1B;AAeP,OAAO,IAAM,SAAS,GAAG;AACvB;AACA,EAAA,OAAO,EAAE,SAFc;;AAGvB;AACA,EAAA,MAAM,EAAE,QAJe;;AAKvB;AACA,EAAA,OAAO,EAAE,SANc;;AAOvB;AACA,EAAA,QAAQ,EAAE,UARa;;AASvB;AACA,EAAA,KAAK,EAAE;AAVgB,CAAlB;AAaP,OAAM,SAAA,8BAAA,CACJ,KADI,EACoB;AAExB,UAAQ,KAAR;AACE,SAAK,iBAAiB,CAAC,OAAvB;AACA,SAAK,iBAAiB,CAAC,OAAvB;AACA,SAAK,iBAAiB,CAAC,SAAvB;AACE,aAAO,SAAS,CAAC,OAAjB;;AACF,SAAK,iBAAiB,CAAC,MAAvB;AACE,aAAO,SAAS,CAAC,MAAjB;;AACF,SAAK,iBAAiB,CAAC,OAAvB;AACE,aAAO,SAAS,CAAC,OAAjB;;AACF,SAAK,iBAAiB,CAAC,QAAvB;AACE,aAAO,SAAS,CAAC,QAAjB;;AACF,SAAK,iBAAiB,CAAC,KAAvB;AACE,aAAO,SAAS,CAAC,KAAjB;;AACF;AACE;AACA,aAAO,SAAS,CAAC,KAAjB;AAfJ;AAiBD","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * Enum for task events.\n * @enum {string}\n */\nexport type TaskEvent = string;\nexport const TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n * @enum {string}\n */\nexport type InternalTaskState = string;\nexport const InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n * External (API-surfaced) enum for task state.\n * @enum {string}\n */\nexport type TaskState = string;\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}