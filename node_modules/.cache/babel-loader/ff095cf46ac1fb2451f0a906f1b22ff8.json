{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as object from './object';\nimport * as constants from './constants';\n/**\n * @struct\n */\n\nvar RequestMap =\n/** @class */\nfunction () {\n  function RequestMap() {\n    this.map_ = {};\n    this.id_ = constants.minSafeInteger;\n  }\n  /**\n   * Registers the given request with this map.\n   * The request is unregistered when it completes.\n   * @param r The request to register.\n   */\n\n\n  RequestMap.prototype.addRequest = function (r) {\n    var id = this.id_;\n    this.id_++;\n    this.map_[id] = r;\n    var self = this;\n\n    function unmap() {\n      delete self.map_[id];\n    }\n\n    r.getPromise().then(unmap, unmap);\n  };\n  /**\n   * Cancels all registered requests.\n   */\n\n\n  RequestMap.prototype.clear = function () {\n    object.forEach(this.map_, function (key, val) {\n      if (val) {\n        val.cancel(true);\n      }\n    });\n    this.map_ = {};\n  };\n\n  return RequestMap;\n}();\n\nexport { RequestMap };","map":{"version":3,"sources":["../src/implementation/requestmap.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AACH,OAAO,KAAK,MAAZ,MAAwB,UAAxB;AAGA,OAAO,KAAK,SAAZ,MAA2B,aAA3B;AAEA;;AAEG;;AACH,IAAA,UAAA;AAAA;AAAA,YAAA;AAIE,WAAA,UAAA,GAAA;AAHQ,SAAA,IAAA,GAAwC,EAAxC;AAIN,SAAK,GAAL,GAAW,SAAS,CAAC,cAArB;AACD;AAED;;;;AAIG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,CAAX,EAA0B;AACxB,QAAI,EAAE,GAAG,KAAK,GAAd;AACA,SAAK,GAAL;AACA,SAAK,IAAL,CAAU,EAAV,IAAgB,CAAhB;AACA,QAAI,IAAI,GAAG,IAAX;;AAEA,aAAA,KAAA,GAAA;AACE,aAAO,IAAI,CAAC,IAAL,CAAU,EAAV,CAAP;AACD;;AACD,IAAA,CAAC,CAAC,UAAF,GAAe,IAAf,CAAoB,KAApB,EAA2B,KAA3B;AACD,GAVD;AAYA;;AAEG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,IAAA,MAAM,CAAC,OAAP,CAAe,KAAK,IAApB,EAA0B,UAAC,GAAD,EAAc,GAAd,EAA+B;AACvD,UAAI,GAAJ,EAAS;AACP,QAAA,GAAG,CAAC,MAAJ,CAAW,IAAX;AACD;AACF,KAJD;AAKA,SAAK,IAAL,GAAY,EAAZ;AACD,GAPD;;AAQF,SAAA,UAAA;AAAC,CApCD,EAAA","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as object from './object';\nimport * as RequestExports from './request';\nimport { Request } from './request';\nimport * as constants from './constants';\n\n/**\n * @struct\n */\nexport class RequestMap {\n  private map_: { [key: number]: Request<any> } = {};\n  private id_: number;\n\n  constructor() {\n    this.id_ = constants.minSafeInteger;\n  }\n\n  /**\n   * Registers the given request with this map.\n   * The request is unregistered when it completes.\n   * @param r The request to register.\n   */\n  addRequest(r: Request<any>) {\n    let id = this.id_;\n    this.id_++;\n    this.map_[id] = r;\n    let self = this;\n\n    function unmap() {\n      delete self.map_[id];\n    }\n    r.getPromise().then(unmap, unmap);\n  }\n\n  /**\n   * Cancels all registered requests.\n   */\n  clear() {\n    object.forEach(this.map_, (key: string, val: Request<any>) => {\n      if (val) {\n        val.cancel(true);\n      }\n    });\n    this.map_ = {};\n  }\n}\n"]},"metadata":{},"sourceType":"module"}