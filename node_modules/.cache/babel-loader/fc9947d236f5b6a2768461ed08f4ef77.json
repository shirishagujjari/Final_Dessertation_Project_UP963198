{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\n/**\n * @struct\n */\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var path = '(/([^?#]*).*)?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var httpRegex = new RegExp('^https?://firebasestorage\\\\.googleapis\\\\.com/' + version + '/b/' + bucketDomain + '/o' + path, 'i');\n    var httpIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: httpRegex,\n      indices: httpIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n\nexport { Location };","map":{"version":3,"sources":["../src/implementation/location.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport { errors } from './error';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  fullServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location = null;\n    let bucketDomain = '([A-Za-z0-9.\\\\-]+)';\n\n    function gsModify(loc: Location) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    let gsPath = '(/(.*))?$';\n    let path = '(/([^?#]*).*)?$';\n    let gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    let gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    let version = 'v[A-Za-z0-9_]+';\n    let httpRegex = new RegExp(\n      '^https?://firebasestorage\\\\.googleapis\\\\.com/' +\n        version +\n        '/b/' +\n        bucketDomain +\n        '/o' +\n        path,\n      'i'\n    );\n    let httpIndices = { bucket: 1, path: 3 };\n    let groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      { regex: httpRegex, indices: httpIndices, postModify: httpModify }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      let group = groups[i];\n      let captures = group.regex.exec(url);\n      if (captures) {\n        let bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}