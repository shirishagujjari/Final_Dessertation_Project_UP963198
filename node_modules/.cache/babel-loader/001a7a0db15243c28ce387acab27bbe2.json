{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n/**\n * @struct\n */\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, opt_error, opt_complete) {\n    var asFunctions = type.isFunction(nextOrObserver) || type.isDef(opt_error) || type.isDef(opt_complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = opt_error || null;\n      this.complete = opt_complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nexport { Observer };","map":{"version":3,"sources":["../src/implementation/observer.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AACH,OAAO,KAAK,IAAZ,MAAsB,QAAtB;AAeA;;AAEG;;AACH,IAAA,QAAA;AAAA;AAAA,YAAA;AAKE,WAAA,QAAA,CACE,cADF,EAEE,SAFF,EAGE,YAHF,EAGkC;AAEhC,QAAI,WAAW,GACb,IAAI,CAAC,UAAL,CAAgB,cAAhB,KACA,IAAI,CAAC,KAAL,CAAW,SAAX,CADA,IAEA,IAAI,CAAC,KAAL,CAAW,YAAX,CAHF;;AAIA,QAAI,WAAJ,EAAiB;AACf,WAAK,IAAL,GAAY,cAAZ;AACA,WAAK,KAAL,GAAa,SAAS,IAAI,IAA1B;AACA,WAAK,QAAL,GAAgB,YAAY,IAAI,IAAhC;AACD,KAJD,MAIO;AACL,UAAM,QAAQ,GAAG,cAAjB;AAKA,WAAK,IAAL,GAAY,QAAQ,CAAC,IAAT,IAAiB,IAA7B;AACA,WAAK,KAAL,GAAa,QAAQ,CAAC,KAAT,IAAkB,IAA/B;AACA,WAAK,QAAL,GAAgB,QAAQ,CAAC,QAAT,IAAqB,IAArC;AACD;AACF;;AACH,SAAA,QAAA;AAAC,CA7BD,EAAA","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\ntype NextFn<T> = (value: T) => void;\ntype ErrorFn = (error: Error) => void;\ntype CompleteFn = () => void;\ntype Unsubscribe = () => void;\n\ntype Subscribe<T> = (\n  next: NextFn<T> | { [name: string]: string | null },\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport { NextFn, ErrorFn, CompleteFn, Unsubscribe, Subscribe };\n\n/**\n * @struct\n */\nexport class Observer<T> {\n  next: NextFn<T> | null;\n  error: ErrorFn | null;\n  complete: CompleteFn | null;\n\n  constructor(\n    nextOrObserver: NextFn<T> | { [name: string]: string | null } | null,\n    opt_error?: ErrorFn | null,\n    opt_complete?: CompleteFn | null\n  ) {\n    let asFunctions =\n      type.isFunction(nextOrObserver) ||\n      type.isDef(opt_error) ||\n      type.isDef(opt_complete);\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T> | null;\n      this.error = opt_error || null;\n      this.complete = opt_complete || null;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T> | null;\n        error?: ErrorFn | null;\n        complete?: CompleteFn | null;\n      };\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}